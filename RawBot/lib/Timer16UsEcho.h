//*****************************************************************************
//*****************************************************************************
//  FILENAME: Timer16UsEcho.h
//   Version: 2.6, Updated on 2013/5/19 at 10:44:39
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Timer16UsEcho_INCLUDE
#define Timer16UsEcho_INCLUDE

#include <m8c.h>

#pragma fastcall16 Timer16UsEcho_EnableInt
#pragma fastcall16 Timer16UsEcho_DisableInt
#pragma fastcall16 Timer16UsEcho_Start
#pragma fastcall16 Timer16UsEcho_Stop
#pragma fastcall16 Timer16UsEcho_wReadTimer                // Read  DR0
#pragma fastcall16 Timer16UsEcho_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 Timer16UsEcho_WritePeriod               // Write DR1
#pragma fastcall16 Timer16UsEcho_wReadCompareValue         // Read  DR2
#pragma fastcall16 Timer16UsEcho_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wTimer16UsEcho_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wTimer16UsEcho_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wTimer16UsEcho_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wTimer16UsEcho_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wTimer16UsEcho_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Timer16UsEcho API.
//-------------------------------------------------

extern void Timer16UsEcho_EnableInt(void);                           // Proxy 1
extern void Timer16UsEcho_DisableInt(void);                          // Proxy 1
extern void Timer16UsEcho_Start(void);                               // Proxy 1
extern void Timer16UsEcho_Stop(void);                                // Proxy 1
extern WORD Timer16UsEcho_wReadTimer(void);                          // Proxy 1
extern WORD Timer16UsEcho_wReadTimerSaveCV(void);                    // Proxy 2
extern void Timer16UsEcho_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD Timer16UsEcho_wReadCompareValue(void);                   // Proxy 1
extern void Timer16UsEcho_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wTimer16UsEcho_ReadCompareValue(void);       // Deprecated
extern WORD wTimer16UsEcho_ReadTimerSaveCV(void);        // Deprecated
extern WORD wTimer16UsEcho_ReadCounter(void);            // Obsolete
extern WORD wTimer16UsEcho_ReadTimer(void);              // Deprecated
extern WORD wTimer16UsEcho_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for Timer16UsEcho API's.
//--------------------------------------------------

#define Timer16UsEcho_CONTROL_REG_START_BIT    ( 0x01 )
#define Timer16UsEcho_INT_REG_ADDR             ( 0x0e1 )
#define Timer16UsEcho_INT_MASK                 ( 0x08 )


//--------------------------------------------------
// Constants for Timer16UsEcho user defined values
//--------------------------------------------------

#define Timer16UsEcho_PERIOD                   ( 0xb540 )
#define Timer16UsEcho_COMPARE_VALUE            ( 0x0 )


//-------------------------------------------------
// Register Addresses for Timer16UsEcho
//-------------------------------------------------

#pragma ioport  Timer16UsEcho_COUNTER_LSB_REG:  0x028      //Count register LSB
BYTE            Timer16UsEcho_COUNTER_LSB_REG;
#pragma ioport  Timer16UsEcho_COUNTER_MSB_REG:  0x02c      //Count register MSB
BYTE            Timer16UsEcho_COUNTER_MSB_REG;
#pragma ioport  Timer16UsEcho_PERIOD_LSB_REG:   0x029      //Period register LSB
BYTE            Timer16UsEcho_PERIOD_LSB_REG;
#pragma ioport  Timer16UsEcho_PERIOD_MSB_REG:   0x02d      //Period register MSB
BYTE            Timer16UsEcho_PERIOD_MSB_REG;
#pragma ioport  Timer16UsEcho_COMPARE_LSB_REG:  0x02a      //Compare register LSB
BYTE            Timer16UsEcho_COMPARE_LSB_REG;
#pragma ioport  Timer16UsEcho_COMPARE_MSB_REG:  0x02e      //Compare register MSB
BYTE            Timer16UsEcho_COMPARE_MSB_REG;
#pragma ioport  Timer16UsEcho_CONTROL_LSB_REG:  0x02b      //Control register LSB
BYTE            Timer16UsEcho_CONTROL_LSB_REG;
#pragma ioport  Timer16UsEcho_CONTROL_MSB_REG:  0x02f      //Control register MSB
BYTE            Timer16UsEcho_CONTROL_MSB_REG;
#pragma ioport  Timer16UsEcho_FUNC_LSB_REG: 0x128          //Function register LSB
BYTE            Timer16UsEcho_FUNC_LSB_REG;
#pragma ioport  Timer16UsEcho_FUNC_MSB_REG: 0x12c          //Function register MSB
BYTE            Timer16UsEcho_FUNC_MSB_REG;
#pragma ioport  Timer16UsEcho_INPUT_LSB_REG:    0x129      //Input register LSB
BYTE            Timer16UsEcho_INPUT_LSB_REG;
#pragma ioport  Timer16UsEcho_INPUT_MSB_REG:    0x12d      //Input register MSB
BYTE            Timer16UsEcho_INPUT_MSB_REG;
#pragma ioport  Timer16UsEcho_OUTPUT_LSB_REG:   0x12a      //Output register LSB
BYTE            Timer16UsEcho_OUTPUT_LSB_REG;
#pragma ioport  Timer16UsEcho_OUTPUT_MSB_REG:   0x12e      //Output register MSB
BYTE            Timer16UsEcho_OUTPUT_MSB_REG;
#pragma ioport  Timer16UsEcho_INT_REG:       0x0e1         //Interrupt Mask Register
BYTE            Timer16UsEcho_INT_REG;


//-------------------------------------------------
// Timer16UsEcho Macro 'Functions'
//-------------------------------------------------

#define Timer16UsEcho_Start_M \
   ( Timer16UsEcho_CONTROL_LSB_REG |=  Timer16UsEcho_CONTROL_REG_START_BIT )

#define Timer16UsEcho_Stop_M  \
   ( Timer16UsEcho_CONTROL_LSB_REG &= ~Timer16UsEcho_CONTROL_REG_START_BIT )

#define Timer16UsEcho_EnableInt_M   \
   M8C_EnableIntMask(  Timer16UsEcho_INT_REG, Timer16UsEcho_INT_MASK )

#define Timer16UsEcho_DisableInt_M  \
   M8C_DisableIntMask( Timer16UsEcho_INT_REG, Timer16UsEcho_INT_MASK )

#endif
// end of file Timer16UsEcho.h
