//*****************************************************************************
//*****************************************************************************
//  FILENAME: Timer8UsTrig.h
//   Version: 2.70, Updated on 2013/5/19 at 10:44:42
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: Timer8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Timer8UsTrig_INCLUDE
#define Timer8UsTrig_INCLUDE

#include <m8c.h>

#pragma fastcall16 Timer8UsTrig_EnableInt                 //                 Proxy 1
#pragma fastcall16 Timer8UsTrig_DisableInt                //                 Proxy 1
#pragma fastcall16 Timer8UsTrig_Start                     //                 Proxy 1
#pragma fastcall16 Timer8UsTrig_Stop                      //                 Proxy 1
#pragma fastcall16 Timer8UsTrig_bReadTimer                // Read  DR0       Proxy 1
#pragma fastcall16 Timer8UsTrig_bReadTimerSaveCV          // Read  DR0       Proxy 2
#pragma fastcall16 Timer8UsTrig_WritePeriod               // Write DR1       Proxy 1
#pragma fastcall16 Timer8UsTrig_bReadCompareValue         // Read  DR2       Proxy 1
#pragma fastcall16 Timer8UsTrig_WriteCompareValue         // Write DR2       Proxy 1

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bTimer8UsTrig_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 bTimer8UsTrig_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 bTimer8UsTrig_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 bTimer8UsTrig_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 bTimer8UsTrig_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Timer8UsTrig API.
//-------------------------------------------------

extern void Timer8UsTrig_EnableInt(void);
extern void Timer8UsTrig_DisableInt(void);
extern void Timer8UsTrig_Start(void);
extern void Timer8UsTrig_Stop(void);
extern BYTE Timer8UsTrig_bReadTimer(void);
extern BYTE Timer8UsTrig_bReadTimerSaveCV(void);
extern void Timer8UsTrig_WritePeriod(BYTE bPeriod);
extern BYTE Timer8UsTrig_bReadCompareValue(void);
extern void Timer8UsTrig_WriteCompareValue(BYTE bCompareValue);

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bTimer8UsTrig_ReadCompareValue(void);       // Deprecated
extern BYTE bTimer8UsTrig_ReadTimerSaveCV(void);        // Deprecated
extern BYTE bTimer8UsTrig_ReadCounter(void);            // Obsolete
extern BYTE bTimer8UsTrig_ReadTimer(void);              // Deprecated
extern BYTE bTimer8UsTrig_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for Timer8UsTrig API's.
//--------------------------------------------------

#define Timer8UsTrig_CONTROL_REG_START_BIT     ( 0x01 )
#define Timer8UsTrig_INT_REG_ADDR              ( 0x0e1 )
#define Timer8UsTrig_INT_MASK                  ( 0x02 )


//--------------------------------------------------
// Constants for Timer8UsTrig user defined values
//--------------------------------------------------

#define Timer8UsTrig_PERIOD                    ( 0x0a )
#define Timer8UsTrig_COMPARE_VALUE             ( 0x00 )


//-------------------------------------------------
// Register Addresses for Timer8UsTrig
//-------------------------------------------------

#pragma ioport  Timer8UsTrig_COUNTER_REG:   0x024          //DR0 Count register
BYTE            Timer8UsTrig_COUNTER_REG;
#pragma ioport  Timer8UsTrig_PERIOD_REG:    0x025          //DR1 Period register
BYTE            Timer8UsTrig_PERIOD_REG;
#pragma ioport  Timer8UsTrig_COMPARE_REG:   0x026          //DR2 Compare register
BYTE            Timer8UsTrig_COMPARE_REG;
#pragma ioport  Timer8UsTrig_CONTROL_REG:   0x027          //Control register
BYTE            Timer8UsTrig_CONTROL_REG;
#pragma ioport  Timer8UsTrig_FUNC_REG:  0x124              //Function register
BYTE            Timer8UsTrig_FUNC_REG;
#pragma ioport  Timer8UsTrig_INPUT_REG: 0x125              //Input register
BYTE            Timer8UsTrig_INPUT_REG;
#pragma ioport  Timer8UsTrig_OUTPUT_REG:    0x126          //Output register
BYTE            Timer8UsTrig_OUTPUT_REG;
#pragma ioport  Timer8UsTrig_INT_REG:       0x0e1          //Interrupt Mask Register
BYTE            Timer8UsTrig_INT_REG;


//-------------------------------------------------
// Timer8UsTrig Macro 'Functions'
//-------------------------------------------------

#define Timer8UsTrig_Start_M \
   ( Timer8UsTrig_CONTROL_REG |=  Timer8UsTrig_CONTROL_REG_START_BIT )

#define Timer8UsTrig_Stop_M  \
   ( Timer8UsTrig_CONTROL_REG &= ~Timer8UsTrig_CONTROL_REG_START_BIT )

#define Timer8UsTrig_EnableInt_M   \
   M8C_EnableIntMask(  Timer8UsTrig_INT_REG, Timer8UsTrig_INT_MASK )

#define Timer8UsTrig_DisableInt_M  \
   M8C_DisableIntMask( Timer8UsTrig_INT_REG, Timer8UsTrig_INT_MASK )

#endif
// end of file Timer8UsTrig.h
