//*****************************************************************************
//*****************************************************************************
//  FILENAME: Timer8Main.h
//   Version: 2.70, Updated on 2013/5/19 at 10:44:42
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: Timer8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Timer8Main_INCLUDE
#define Timer8Main_INCLUDE

#include <m8c.h>

#pragma fastcall16 Timer8Main_EnableInt                 //                 Proxy 1
#pragma fastcall16 Timer8Main_DisableInt                //                 Proxy 1
#pragma fastcall16 Timer8Main_Start                     //                 Proxy 1
#pragma fastcall16 Timer8Main_Stop                      //                 Proxy 1
#pragma fastcall16 Timer8Main_bReadTimer                // Read  DR0       Proxy 1
#pragma fastcall16 Timer8Main_bReadTimerSaveCV          // Read  DR0       Proxy 2
#pragma fastcall16 Timer8Main_WritePeriod               // Write DR1       Proxy 1
#pragma fastcall16 Timer8Main_bReadCompareValue         // Read  DR2       Proxy 1
#pragma fastcall16 Timer8Main_WriteCompareValue         // Write DR2       Proxy 1

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bTimer8Main_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 bTimer8Main_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 bTimer8Main_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 bTimer8Main_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 bTimer8Main_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Timer8Main API.
//-------------------------------------------------

extern void Timer8Main_EnableInt(void);
extern void Timer8Main_DisableInt(void);
extern void Timer8Main_Start(void);
extern void Timer8Main_Stop(void);
extern BYTE Timer8Main_bReadTimer(void);
extern BYTE Timer8Main_bReadTimerSaveCV(void);
extern void Timer8Main_WritePeriod(BYTE bPeriod);
extern BYTE Timer8Main_bReadCompareValue(void);
extern void Timer8Main_WriteCompareValue(BYTE bCompareValue);

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bTimer8Main_ReadCompareValue(void);       // Deprecated
extern BYTE bTimer8Main_ReadTimerSaveCV(void);        // Deprecated
extern BYTE bTimer8Main_ReadCounter(void);            // Obsolete
extern BYTE bTimer8Main_ReadTimer(void);              // Deprecated
extern BYTE bTimer8Main_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for Timer8Main API's.
//--------------------------------------------------

#define Timer8Main_CONTROL_REG_START_BIT       ( 0x01 )
#define Timer8Main_INT_REG_ADDR                ( 0x0e1 )
#define Timer8Main_INT_MASK                    ( 0x01 )


//--------------------------------------------------
// Constants for Timer8Main user defined values
//--------------------------------------------------

#define Timer8Main_PERIOD                      ( 0xc7 )
#define Timer8Main_COMPARE_VALUE               ( 0x00 )


//-------------------------------------------------
// Register Addresses for Timer8Main
//-------------------------------------------------

#pragma ioport  Timer8Main_COUNTER_REG: 0x020              //DR0 Count register
BYTE            Timer8Main_COUNTER_REG;
#pragma ioport  Timer8Main_PERIOD_REG:  0x021              //DR1 Period register
BYTE            Timer8Main_PERIOD_REG;
#pragma ioport  Timer8Main_COMPARE_REG: 0x022              //DR2 Compare register
BYTE            Timer8Main_COMPARE_REG;
#pragma ioport  Timer8Main_CONTROL_REG: 0x023              //Control register
BYTE            Timer8Main_CONTROL_REG;
#pragma ioport  Timer8Main_FUNC_REG:    0x120              //Function register
BYTE            Timer8Main_FUNC_REG;
#pragma ioport  Timer8Main_INPUT_REG:   0x121              //Input register
BYTE            Timer8Main_INPUT_REG;
#pragma ioport  Timer8Main_OUTPUT_REG:  0x122              //Output register
BYTE            Timer8Main_OUTPUT_REG;
#pragma ioport  Timer8Main_INT_REG:       0x0e1            //Interrupt Mask Register
BYTE            Timer8Main_INT_REG;


//-------------------------------------------------
// Timer8Main Macro 'Functions'
//-------------------------------------------------

#define Timer8Main_Start_M \
   ( Timer8Main_CONTROL_REG |=  Timer8Main_CONTROL_REG_START_BIT )

#define Timer8Main_Stop_M  \
   ( Timer8Main_CONTROL_REG &= ~Timer8Main_CONTROL_REG_START_BIT )

#define Timer8Main_EnableInt_M   \
   M8C_EnableIntMask(  Timer8Main_INT_REG, Timer8Main_INT_MASK )

#define Timer8Main_DisableInt_M  \
   M8C_DisableIntMask( Timer8Main_INT_REG, Timer8Main_INT_MASK )

#endif
// end of file Timer8Main.h
