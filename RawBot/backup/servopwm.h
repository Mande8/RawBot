//*****************************************************************************
//*****************************************************************************
//  FILENAME: ServoPWM.h
//   Version: 2.5, Updated on 2013/5/19 at 10:44:6
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: PWM16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef ServoPWM_INCLUDE
#define ServoPWM_INCLUDE

#include <m8c.h>

#pragma fastcall16 ServoPWM_EnableInt
#pragma fastcall16 ServoPWM_DisableInt
#pragma fastcall16 ServoPWM_Start
#pragma fastcall16 ServoPWM_Stop
#pragma fastcall16 ServoPWM_wReadCounter              // Read  DR0
#pragma fastcall16 ServoPWM_WritePeriod               // Write DR1
#pragma fastcall16 ServoPWM_wReadPulseWidth           // Read  DR2
#pragma fastcall16 ServoPWM_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wServoPWM_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 wServoPWM_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the ServoPWM API.
//-------------------------------------------------

extern void ServoPWM_EnableInt(void);                  // Proxy Class 1
extern void ServoPWM_DisableInt(void);                 // Proxy Class 1
extern void ServoPWM_Start(void);                      // Proxy Class 1
extern void ServoPWM_Stop(void);                       // Proxy Class 1
extern WORD ServoPWM_wReadCounter(void);               // Proxy Class 2
extern void ServoPWM_WritePeriod(WORD wPeriod);        // Proxy Class 1
extern WORD ServoPWM_wReadPulseWidth(void);            // Proxy Class 1
extern void ServoPWM_WritePulseWidth(WORD wPulseWidth);// Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wServoPWM_ReadCounter(void);            // Deprecated
extern WORD wServoPWM_ReadPulseWidth(void);         // Deprecated


//-------------------------------------------------
// Constants for ServoPWM API's.
//-------------------------------------------------

#define ServoPWM_CONTROL_REG_START_BIT         ( 0x01 )
#define ServoPWM_INT_REG_ADDR                  ( 0x0e1 )
#define ServoPWM_INT_MASK                      ( 0x20 )


//--------------------------------------------------
// Constants for ServoPWM user defined values
//--------------------------------------------------

#define ServoPWM_PERIOD                        ( 0xf9f )
#define ServoPWM_PULSE_WIDTH                   ( 0x12c )


//-------------------------------------------------
// Register Addresses for ServoPWM
//-------------------------------------------------

#pragma ioport  ServoPWM_COUNTER_LSB_REG:   0x030          //DR0 Count register LSB
BYTE            ServoPWM_COUNTER_LSB_REG;
#pragma ioport  ServoPWM_COUNTER_MSB_REG:   0x034          //DR0 Count register MSB
BYTE            ServoPWM_COUNTER_MSB_REG;
#pragma ioport  ServoPWM_PERIOD_LSB_REG:    0x031          //DR1 Period register LSB
BYTE            ServoPWM_PERIOD_LSB_REG;
#pragma ioport  ServoPWM_PERIOD_MSB_REG:    0x035          //DR1 Period register MSB
BYTE            ServoPWM_PERIOD_MSB_REG;
#pragma ioport  ServoPWM_COMPARE_LSB_REG:   0x032          //DR2 Compare register LSB
BYTE            ServoPWM_COMPARE_LSB_REG;
#pragma ioport  ServoPWM_COMPARE_MSB_REG:   0x036          //DR2 Compare register MSB
BYTE            ServoPWM_COMPARE_MSB_REG;
#pragma ioport  ServoPWM_CONTROL_LSB_REG:   0x033          //Control register LSB
BYTE            ServoPWM_CONTROL_LSB_REG;
#pragma ioport  ServoPWM_CONTROL_MSB_REG:   0x037          //Control register MSB
BYTE            ServoPWM_CONTROL_MSB_REG;
#pragma ioport  ServoPWM_FUNC_LSB_REG:  0x130              //Function register LSB
BYTE            ServoPWM_FUNC_LSB_REG;
#pragma ioport  ServoPWM_FUNC_MSB_REG:  0x134              //Function register MSB
BYTE            ServoPWM_FUNC_MSB_REG;
#pragma ioport  ServoPWM_INPUT_LSB_REG: 0x131              //Input register LSB
BYTE            ServoPWM_INPUT_LSB_REG;
#pragma ioport  ServoPWM_INPUT_MSB_REG: 0x135              //Input register MSB
BYTE            ServoPWM_INPUT_MSB_REG;
#pragma ioport  ServoPWM_OUTPUT_LSB_REG:    0x132          //Output register LSB
BYTE            ServoPWM_OUTPUT_LSB_REG;
#pragma ioport  ServoPWM_OUTPUT_MSB_REG:    0x136          //Output register MSB
BYTE            ServoPWM_OUTPUT_MSB_REG;
#pragma ioport  ServoPWM_INT_REG:       0x0e1              //Interrupt Mask Register
BYTE            ServoPWM_INT_REG;


//-------------------------------------------------
// ServoPWM Macro 'Functions'
//-------------------------------------------------

#define ServoPWM_Start_M \
   ( ServoPWM_CONTROL_LSB_REG |=  ServoPWM_CONTROL_REG_START_BIT )

#define ServoPWM_Stop_M  \
   ( ServoPWM_CONTROL_LSB_REG &= ~ServoPWM_CONTROL_REG_START_BIT )

#define ServoPWM_EnableInt_M   \
   M8C_EnableIntMask(  ServoPWM_INT_REG, ServoPWM_INT_MASK )

#define ServoPWM_DisableInt_M  \
   M8C_DisableIntMask( ServoPWM_INT_REG, ServoPWM_INT_MASK )

#endif
// end of file ServoPWM.h
